{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAW5C,MAAM,OAAO,SAAU,SAAQ,SAAS;IACtC,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,mCAAmC;QAEjC,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,OAAO;QACL,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI;QAEF,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK;QACH,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI;QACF,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK;QAEH,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;IAED,oBAAoB;QAElB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type {\n  // ReadCallback,\n  // SerialOptions,\n  SerialPlugin,\n  SerialResponse,\n  // SerialWriteOptions,\n  // UsbAttachedDetachedCallback,\n} from './definitions';\n\nexport class SerialWeb extends WebPlugin implements SerialPlugin {\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  registerUsbAttachedDetachedCallback(): // callback: UsbAttachedDetachedCallback,\n  Promise<string> {\n    throw new Error('Method not implemented.');\n  }\n\n  devices(): Promise<SerialResponse<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  open(): // options: SerialOptions\n  Promise<SerialResponse<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  close(): Promise<SerialResponse<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  read(): Promise<SerialResponse<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  write(): // data: SerialWriteOptions\n  Promise<SerialResponse<any>> {\n    throw new Error('Method not implemented.');\n  }\n\n  registerReadCallback(): // callback: ReadCallback\n  Promise<string> {\n    throw new Error('Method not implemented.');\n  }\n}\n"]}