{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export type CallbackID = string;\n\nexport type UsbAttachedDetachedCallback = (data: SerialResponse<any>) => void;\n\nexport type ReadCallback = (data: SerialResponse<any>) => void;\n\nexport interface SerialOptions {\n  deviceId: number;\n  portNum: number;\n  baudRate?: number;\n  dataBits?: number;\n  stopBits?: number;\n  parity?: number;\n  dtr?: boolean;\n  rts?: boolean;\n  sleepOnPause?: boolean;\n}\n\nexport interface SerialWriteOptions {\n  data: string;\n}\n\nexport interface SerialError {\n  message: string;\n  cause: string;\n}\n\nexport interface SerialResponse<T> {\n  success: boolean;\n  error?: SerialError;\n  data?: T;\n}\n\nexport interface SerialPlugin {\n  echo(options: { value: string }): Promise<{ value: string }>;\n  registerUsbAttachedDetachedCallback(\n    callback: UsbAttachedDetachedCallback,\n  ): Promise<CallbackID>;\n  devices(): Promise<SerialResponse<any>>;\n  open(options: SerialOptions): Promise<SerialResponse<any>>;\n  close(): Promise<SerialResponse<any>>;\n  read(): Promise<SerialResponse<any>>;\n  write(data: SerialWriteOptions): Promise<SerialResponse<any>>;\n  registerReadCallback(callback: ReadCallback): Promise<CallbackID>;\n}\n"]}